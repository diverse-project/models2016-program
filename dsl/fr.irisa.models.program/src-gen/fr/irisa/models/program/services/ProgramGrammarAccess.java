/*
 * generated by Xtext
 */
package fr.irisa.models.program.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class ProgramGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ProgramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Program");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cRoomsKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cRoomsAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cRoomsRoomParserRuleCall_0_1_0 = (RuleCall)cRoomsAssignment_0_1.eContents().get(0);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Assignment cRoomsAssignment_0_2_1 = (Assignment)cGroup_0_2.eContents().get(1);
		private final RuleCall cRoomsRoomParserRuleCall_0_2_1_0 = (RuleCall)cRoomsAssignment_0_2_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cDaysKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDaysAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDaysDayParserRuleCall_1_1_0 = (RuleCall)cDaysAssignment_1_1.eContents().get(0);
		private final Assignment cDaysAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cDaysDayParserRuleCall_1_2_0 = (RuleCall)cDaysAssignment_1_2.eContents().get(0);
		
		//Program:
		//	("Rooms:" rooms+=Room (";" rooms+=Room)*)? ("Days:" days+=Day days+=Day*)?;
		@Override public ParserRule getRule() { return rule; }

		//("Rooms:" rooms+=Room (";" rooms+=Room)*)? ("Days:" days+=Day days+=Day*)?
		public Group getGroup() { return cGroup; }

		//("Rooms:" rooms+=Room (";" rooms+=Room)*)?
		public Group getGroup_0() { return cGroup_0; }

		//"Rooms:"
		public Keyword getRoomsKeyword_0_0() { return cRoomsKeyword_0_0; }

		//rooms+=Room
		public Assignment getRoomsAssignment_0_1() { return cRoomsAssignment_0_1; }

		//Room
		public RuleCall getRoomsRoomParserRuleCall_0_1_0() { return cRoomsRoomParserRuleCall_0_1_0; }

		//(";" rooms+=Room)*
		public Group getGroup_0_2() { return cGroup_0_2; }

		//";"
		public Keyword getSemicolonKeyword_0_2_0() { return cSemicolonKeyword_0_2_0; }

		//rooms+=Room
		public Assignment getRoomsAssignment_0_2_1() { return cRoomsAssignment_0_2_1; }

		//Room
		public RuleCall getRoomsRoomParserRuleCall_0_2_1_0() { return cRoomsRoomParserRuleCall_0_2_1_0; }

		//("Days:" days+=Day days+=Day*)?
		public Group getGroup_1() { return cGroup_1; }

		//"Days:"
		public Keyword getDaysKeyword_1_0() { return cDaysKeyword_1_0; }

		//days+=Day
		public Assignment getDaysAssignment_1_1() { return cDaysAssignment_1_1; }

		//Day
		public RuleCall getDaysDayParserRuleCall_1_1_0() { return cDaysDayParserRuleCall_1_1_0; }

		//days+=Day*
		public Assignment getDaysAssignment_1_2() { return cDaysAssignment_1_2; }

		//Day
		public RuleCall getDaysDayParserRuleCall_1_2_0() { return cDaysDayParserRuleCall_1_2_0; }
	}

	public class RoomElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Room");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Room:
		//	name=STRING;
		@Override public ParserRule getRule() { return rule; }

		//name=STRING
		public Assignment getNameAssignment() { return cNameAssignment; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0() { return cNameSTRINGTerminalRuleCall_0; }
	}

	public class DayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Day");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDayKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSessionsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSessionsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cSessionsSessionParserRuleCall_4_1_0 = (RuleCall)cSessionsAssignment_4_1.eContents().get(0);
		private final Assignment cSessionsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cSessionsSessionParserRuleCall_4_2_0 = (RuleCall)cSessionsAssignment_4_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Day:
		//	"Day" "[" "name:" name=STRING ("Sessions:" sessions+=Session sessions+=Session*)? "]";
		@Override public ParserRule getRule() { return rule; }

		//"Day" "[" "name:" name=STRING ("Sessions:" sessions+=Session sessions+=Session*)? "]"
		public Group getGroup() { return cGroup; }

		//"Day"
		public Keyword getDayKeyword_0() { return cDayKeyword_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//"name:"
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }

		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }

		//("Sessions:" sessions+=Session sessions+=Session*)?
		public Group getGroup_4() { return cGroup_4; }

		//"Sessions:"
		public Keyword getSessionsKeyword_4_0() { return cSessionsKeyword_4_0; }

		//sessions+=Session
		public Assignment getSessionsAssignment_4_1() { return cSessionsAssignment_4_1; }

		//Session
		public RuleCall getSessionsSessionParserRuleCall_4_1_0() { return cSessionsSessionParserRuleCall_4_1_0; }

		//sessions+=Session*
		public Assignment getSessionsAssignment_4_2() { return cSessionsAssignment_4_2; }

		//Session
		public RuleCall getSessionsSessionParserRuleCall_4_2_0() { return cSessionsSessionParserRuleCall_4_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class SessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Session");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSessionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cStartKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cStartAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cStartSTRINGTerminalRuleCall_5_0 = (RuleCall)cStartAssignment_5.eContents().get(0);
		private final Keyword cEndKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cEndAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cEndSTRINGTerminalRuleCall_7_0 = (RuleCall)cEndAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cTalksKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cTalksAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cTalksTalkParserRuleCall_8_1_0 = (RuleCall)cTalksAssignment_8_1.eContents().get(0);
		private final Assignment cTalksAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cTalksTalkParserRuleCall_8_2_0 = (RuleCall)cTalksAssignment_8_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Session:
		//	"Session" "[" "name:" name=STRING "start:" start=STRING "end:" end=STRING ("Talks:" talks+=Talk talks+=Talk*)? "]";
		@Override public ParserRule getRule() { return rule; }

		//"Session" "[" "name:" name=STRING "start:" start=STRING "end:" end=STRING ("Talks:" talks+=Talk talks+=Talk*)? "]"
		public Group getGroup() { return cGroup; }

		//"Session"
		public Keyword getSessionKeyword_0() { return cSessionKeyword_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//"name:"
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }

		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }

		//"start:"
		public Keyword getStartKeyword_4() { return cStartKeyword_4; }

		//start=STRING
		public Assignment getStartAssignment_5() { return cStartAssignment_5; }

		//STRING
		public RuleCall getStartSTRINGTerminalRuleCall_5_0() { return cStartSTRINGTerminalRuleCall_5_0; }

		//"end:"
		public Keyword getEndKeyword_6() { return cEndKeyword_6; }

		//end=STRING
		public Assignment getEndAssignment_7() { return cEndAssignment_7; }

		//STRING
		public RuleCall getEndSTRINGTerminalRuleCall_7_0() { return cEndSTRINGTerminalRuleCall_7_0; }

		//("Talks:" talks+=Talk talks+=Talk*)?
		public Group getGroup_8() { return cGroup_8; }

		//"Talks:"
		public Keyword getTalksKeyword_8_0() { return cTalksKeyword_8_0; }

		//talks+=Talk
		public Assignment getTalksAssignment_8_1() { return cTalksAssignment_8_1; }

		//Talk
		public RuleCall getTalksTalkParserRuleCall_8_1_0() { return cTalksTalkParserRuleCall_8_1_0; }

		//talks+=Talk*
		public Assignment getTalksAssignment_8_2() { return cTalksAssignment_8_2; }

		//Talk
		public RuleCall getTalksTalkParserRuleCall_8_2_0() { return cTalksTalkParserRuleCall_8_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_9() { return cRightSquareBracketKeyword_9; }
	}

	public class TalkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Talk");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTalkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTitleKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTilteAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTilteSTRINGTerminalRuleCall_3_0 = (RuleCall)cTilteAssignment_3.eContents().get(0);
		private final Keyword cRoomKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRoomAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRoomSTRINGTerminalRuleCall_5_0 = (RuleCall)cRoomAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSpeakersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSpeakersAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cSpeakersSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cSpeakersAssignment_6_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cSpeakersAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final RuleCall cSpeakersSTRINGTerminalRuleCall_6_2_1_0 = (RuleCall)cSpeakersAssignment_6_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Talk:
		//	"Talk" "[" "title:" tilte=STRING "room:" room=STRING ("speakers:" speakers+=STRING ("," speakers+=STRING)*)? "]";
		@Override public ParserRule getRule() { return rule; }

		//"Talk" "[" "title:" tilte=STRING "room:" room=STRING ("speakers:" speakers+=STRING ("," speakers+=STRING)*)? "]"
		public Group getGroup() { return cGroup; }

		//"Talk"
		public Keyword getTalkKeyword_0() { return cTalkKeyword_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//"title:"
		public Keyword getTitleKeyword_2() { return cTitleKeyword_2; }

		//tilte=STRING
		public Assignment getTilteAssignment_3() { return cTilteAssignment_3; }

		//STRING
		public RuleCall getTilteSTRINGTerminalRuleCall_3_0() { return cTilteSTRINGTerminalRuleCall_3_0; }

		//"room:"
		public Keyword getRoomKeyword_4() { return cRoomKeyword_4; }

		//room=STRING
		public Assignment getRoomAssignment_5() { return cRoomAssignment_5; }

		//STRING
		public RuleCall getRoomSTRINGTerminalRuleCall_5_0() { return cRoomSTRINGTerminalRuleCall_5_0; }

		//("speakers:" speakers+=STRING ("," speakers+=STRING)*)?
		public Group getGroup_6() { return cGroup_6; }

		//"speakers:"
		public Keyword getSpeakersKeyword_6_0() { return cSpeakersKeyword_6_0; }

		//speakers+=STRING
		public Assignment getSpeakersAssignment_6_1() { return cSpeakersAssignment_6_1; }

		//STRING
		public RuleCall getSpeakersSTRINGTerminalRuleCall_6_1_0() { return cSpeakersSTRINGTerminalRuleCall_6_1_0; }

		//("," speakers+=STRING)*
		public Group getGroup_6_2() { return cGroup_6_2; }

		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }

		//speakers+=STRING
		public Assignment getSpeakersAssignment_6_2_1() { return cSpeakersAssignment_6_2_1; }

		//STRING
		public RuleCall getSpeakersSTRINGTerminalRuleCall_6_2_1_0() { return cSpeakersSTRINGTerminalRuleCall_6_2_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_7() { return cRightSquareBracketKeyword_7; }
	}
	
	
	private final ProgramElements pProgram;
	private final RoomElements pRoom;
	private final DayElements pDay;
	private final SessionElements pSession;
	private final TalkElements pTalk;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ProgramGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pProgram = new ProgramElements();
		this.pRoom = new RoomElements();
		this.pDay = new DayElements();
		this.pSession = new SessionElements();
		this.pTalk = new TalkElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.irisa.models.program.Program".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Program:
	//	("Rooms:" rooms+=Room (";" rooms+=Room)*)? ("Days:" days+=Day days+=Day*)?;
	public ProgramElements getProgramAccess() {
		return pProgram;
	}
	
	public ParserRule getProgramRule() {
		return getProgramAccess().getRule();
	}

	//Room:
	//	name=STRING;
	public RoomElements getRoomAccess() {
		return pRoom;
	}
	
	public ParserRule getRoomRule() {
		return getRoomAccess().getRule();
	}

	//Day:
	//	"Day" "[" "name:" name=STRING ("Sessions:" sessions+=Session sessions+=Session*)? "]";
	public DayElements getDayAccess() {
		return pDay;
	}
	
	public ParserRule getDayRule() {
		return getDayAccess().getRule();
	}

	//Session:
	//	"Session" "[" "name:" name=STRING "start:" start=STRING "end:" end=STRING ("Talks:" talks+=Talk talks+=Talk*)? "]";
	public SessionElements getSessionAccess() {
		return pSession;
	}
	
	public ParserRule getSessionRule() {
		return getSessionAccess().getRule();
	}

	//Talk:
	//	"Talk" "[" "title:" tilte=STRING "room:" room=STRING ("speakers:" speakers+=STRING ("," speakers+=STRING)*)? "]";
	public TalkElements getTalkAccess() {
		return pTalk;
	}
	
	public ParserRule getTalkRule() {
		return getTalkAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
