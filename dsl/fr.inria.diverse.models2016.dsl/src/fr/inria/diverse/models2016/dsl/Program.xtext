// automatically generated by Xtext
grammar fr.inria.diverse.models2016.dsl.Program with org.eclipse.xtext.common.Terminals

import "http://www.example.org/models2016" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Conference returns Conference:
	{Conference}
	name=EString
		('resources' resources+=Resource (resources+=Resource)* )?
		('papers' '{' papers+=Paper (';' papers+=Paper)*)? '}'
		('events' '{' events+=Event (';' events+=Event)*)? '}'
		('program' program=Program)?;

Resource returns Resource:
	Room;

Event returns Event:
	TalkSession | Panel | Workshop | Tutorial | DoctoralSymposium | EducatorSymposium | Reception | Clinic | Lunch | CoffeeBreak;

EString returns ecore::EString:
	STRING;

Program returns Program:
	{Program} '{' (days+=Day (days+=Day)*)? '}';

Room returns Room:
	{Room} 'room' name=EString ('capacity' capacity=EIntegerObject)?;

EIntegerObject returns ecore::EIntegerObject:
	INT;

Day returns Day:
	weekday=WeekDay
		('date' date=DayDataType)?
		(sessions+=Session (sessions+=Session)*)?;

enum WeekDay returns WeekDay:
	Monday = 'Monday' | Tuesday = 'Tuesday'
		| Wednesday = 'Wednesday' | Thursday = 'Thursday'
		| Friday = 'Friday' | Saturday = 'Saturday' | Sunday = 'Sunday';

DayDataType returns ecore::EDate:
	INT'.'INT'.'INT;

HourDataType returns ecore::EDate:
	INT':'INT;

Session returns Session:
	{Session}
		startingTime=HourDataType '-' endingTime=HourDataType 'in'
		room=[Room|EString] ':'
		events+=[Event|EString] (',' events+=[Event|EString])*;

TalkSession returns TalkSession:
	'TalkSession'
		name=EString
		('chair' chair=Person)?
		('abstract' abstract=EString)?
		('papers' papers+=[Paper|EString] (',' papers+=[Paper|EString])*)?;

Panel returns Panel:
	'Panel'
		name=EString
		('abstract' abstract=EString)?
		('panelists' panelists+=Person (',' panelists+=Person)*)?
		('moderators' moderators+=Person (',' moderators+=Person)*)?;

Workshop returns Workshop:
	'Workshop'
		name=EString
		('abstract' abstract=EString)?
		('url' url=EString)?
		('id' id=EString)?
		('organizers' organizers+=Person (',' organizers+=Person)*)?;

Tutorial returns Tutorial:
	'Tutorial'
		name=EString
		('abstract' abstract=EString)?
		('id' id=EString)?
		('organizers' organizers+=Person (',' organizers+=Person)*)?;

DoctoralSymposium returns DoctoralSymposium:
	'DoctoralSymposium'
		name=EString
		('abstract' abstract=EString)?
		('organizers' organizers+=Person (',' organizers+=Person)*)?;

EducatorSymposium returns EducatorSymposium:
	'EducatorSymposium'
		name=EString
		('abstract' abstract=EString)?
		('organizers' organizers+=Person (',' organizers+=Person)*)?;

Reception returns Reception:
	'Reception'
		name=EString
		('abstract' abstract=EString)?;

Clinic returns Clinic:
	'Clinic'
		name=EString
		('abstract' abstract=EString)?;

Lunch returns Lunch:
	'Lunch'
		name=EString
		('abstract' abstract=EString)?;

CoffeeBreak returns CoffeeBreak:
	'CoffeeBreak'
		name=EString
		('abstract' abstract=EString)?;

Paper returns Paper:
	{Paper}
	name=EString
		'authors' authors+=Person (',' authors+=Person)*
		('abstract' abstract=EString)?
		('preprint' preprint=EString)?
		('kind' kind=Track)?;

Person returns Person:
	{Person}
	name=EString
		('email' email=EString)?
		('homepage' homepage=EString)?;

enum Track returns Track:
	PracticeAndInnovation = 'Practice and Innovation' | Research = 'Research';
