// automatically generated by Xtext
grammar fr.inria.diverse.models2016.dsl.Program with org.eclipse.xtext.common.Terminals

import "http://www.example.org/models2016" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Conference returns Conference:
	{Conference}
	'Conference'
	name=EString
	'{'
		('ressources' '{' ressources+=Ressource ( "," ressources+=Ressource)* '}' )?
		('events' '{' events+=Event ( "," events+=Event)* '}' )?
		('program' program=Program)?
	'}';

Ressource returns Ressource:
	Room;


Event returns Event:
	TalkSession | Panel | Workshop | Tutorial | DoctoralSymposium | EducatorSymposium | Reception | Clinic | Lunch;






EString returns ecore::EString:
	STRING;

Program returns Program:
	{Program}
	'Program'
	'{'
		('days' '{' days+=Day ( "," days+=Day)* '}' )?
	'}';

Room returns Room:
	{Room}
	'Room'
	name=EString
	'{'
		('capacity' capacity=EIntegerObject)?
	'}';

EIntegerObject returns ecore::EIntegerObject:
	'-'? INT;

Day returns Day:
	'Day'
	'{'
		'weekday' weekday=WeekDay
		('date' date=EDate)?
		('sessions' '{' sessions+=Session ( "," sessions+=Session)* '}' )?
	'}';

enum WeekDay returns WeekDay:
				Monday = 'Monday' | Tuesday = 'Tuesday' | Wednesday = 'Wednesday' | Thursday = 'Thursday' | Friday = 'Friday' | Saturday = 'Saturday' | Sunday = 'Sunday';

EDate returns ecore::EDate:
	(INT'.'INT'.'INT) | (INT':'INT);

Session returns Session:
	{Session}
	'Session'
	'{'
		('startingTime' startingTime=EDate)?
		('endingTime' endingTime=EDate)?
		('events' '(' events+=[Event|EString] ( "," events+=[Event|EString])* ')' )?
		('room' room=[Room|EString])?
	'}';

TalkSession returns TalkSession:
	'TalkSession'
	'{'
		'title' name=EString
		('abstract' abstract=EString)?
		('papers' '{' papers+=Talk ( "," papers+=Talk)* '}' )?
		('chair' chair=Person)?
	'}';

Panel returns Panel:
	'Panel'
	'{'
		'title' name=EString
		('abstract' abstract=EString)?
		('panelists' '{' panelists+=Person ( "," panelists+=Person)* '}' )?
		('moderators' '{' moderators+=Person ( "," moderators+=Person)* '}' )?
	'}';

Workshop returns Workshop:
	'Workshop'
	'{'
		'title' name=EString
		('abstract' abstract=EString)?
		('url' url=EString)?
		('id' id=EString)?
		('organizers' '{' organizers+=Person ( "," organizers+=Person)* '}' )?
	'}';

Tutorial returns Tutorial:
	'Tutorial'
	'{'
		'title' name=EString
		('abstract' abstract=EString)?
		('id' id=EString)?
		('organizers' '{' organizers+=Person ( "," organizers+=Person)* '}' )?
	'}';

DoctoralSymposium returns DoctoralSymposium:
	'DoctoralSymposium'
	'{'
		'title' name=EString
		('abstract' abstract=EString)?
		('organizers' '{' organizers+=Person ( "," organizers+=Person)* '}' )?
	'}';

EducatorSymposium returns EducatorSymposium:
	'EducatorSymposium'
	'{'
		'title' name=EString
		('abstract' abstract=EString)?
		('organizers' '{' organizers+=Person ( "," organizers+=Person)* '}' )?
	'}';

Reception returns Reception:
	'Reception'
	'{'
		'title' name=EString
		('abstract' abstract=EString)?
	'}';

Clinic returns Clinic:
	'Clinic'
	'{'
		'title' name=EString
		('abstract' abstract=EString)?
	'}';

Lunch returns Lunch:
	'Lunch'
	'{'
		'title' name=EString
		('abstract' abstract=EString)?
	'}';

CoffeeBreak returns CoffeeBreak:
	'CoffeeBreak'
	'{'
		'title' name=EString
		('abstract' abstract=EString)?
	'}';

Talk returns Talk:
	{Talk}
	'Talk'
	'{'
		('preprint' preprint=EString)?
		('kind' kind=Track)?
		('authors' '{' authors+=Person ( "," authors+=Person)* '}' )?
	'}';

Person returns Person:
	{Person}
	'Person'
	name=EString
	'{'
		('email' email=EString)?
		('homepage' homepage=EString)?
	'}';

enum Track returns Track:
				PracticeAndInnovation = 'PracticeAndInnovation' | Research = 'Research';
