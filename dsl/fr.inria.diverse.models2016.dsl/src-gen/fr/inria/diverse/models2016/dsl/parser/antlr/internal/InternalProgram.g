/*
 * generated by Xtext 2.9.2
 */
grammar InternalProgram;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.inria.diverse.models2016.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.inria.diverse.models2016.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.inria.diverse.models2016.dsl.services.ProgramGrammarAccess;

}

@parser::members {

 	private ProgramGrammarAccess grammarAccess;

    public InternalProgramParser(TokenStream input, ProgramGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Conference";
   	}

   	@Override
   	protected ProgramGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleConference
entryRuleConference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConferenceRule()); }
	iv_ruleConference=ruleConference
	{ $current=$iv_ruleConference.current; }
	EOF;

// Rule Conference
ruleConference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConferenceAccess().getConferenceAction_0(),
					$current);
			}
		)
		otherlv_1='Conference'
		{
			newLeafNode(otherlv_1, grammarAccess.getConferenceAccess().getConferenceKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConferenceAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConferenceRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='talk duration'
		{
			newLeafNode(otherlv_3, grammarAccess.getConferenceAccess().getTalkDurationKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConferenceAccess().getTalkDurationEIntegerObjectParserRuleCall_4_0());
				}
				lv_talkDuration_4_0=ruleEIntegerObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConferenceRule());
					}
					set(
						$current,
						"talkDuration",
						lv_talkDuration_4_0,
						"fr.inria.diverse.models2016.dsl.Program.EIntegerObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='kinds'
			{
				newLeafNode(otherlv_5, grammarAccess.getConferenceAccess().getKindsKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConferenceAccess().getKindsKindParserRuleCall_5_1_0());
					}
					lv_kinds_6_0=ruleKind
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConferenceRule());
						}
						add(
							$current,
							"kinds",
							lv_kinds_6_0,
							"fr.inria.diverse.models2016.dsl.Program.Kind");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getConferenceAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConferenceAccess().getKindsKindParserRuleCall_5_2_1_0());
						}
						lv_kinds_8_0=ruleKind
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConferenceRule());
							}
							add(
								$current,
								"kinds",
								lv_kinds_8_0,
								"fr.inria.diverse.models2016.dsl.Program.Kind");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_9='resources'
			{
				newLeafNode(otherlv_9, grammarAccess.getConferenceAccess().getResourcesKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConferenceAccess().getResourcesResourceParserRuleCall_6_1_0());
					}
					lv_resources_10_0=ruleResource
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConferenceRule());
						}
						add(
							$current,
							"resources",
							lv_resources_10_0,
							"fr.inria.diverse.models2016.dsl.Program.Resource");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConferenceAccess().getResourcesResourceParserRuleCall_6_2_0());
					}
					lv_resources_11_0=ruleResource
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConferenceRule());
						}
						add(
							$current,
							"resources",
							lv_resources_11_0,
							"fr.inria.diverse.models2016.dsl.Program.Resource");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_12='papers'
			{
				newLeafNode(otherlv_12, grammarAccess.getConferenceAccess().getPapersKeyword_7_0());
			}
			otherlv_13='{'
			{
				newLeafNode(otherlv_13, grammarAccess.getConferenceAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConferenceAccess().getPapersPaperParserRuleCall_7_2_0());
					}
					lv_papers_14_0=rulePaper
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConferenceRule());
						}
						add(
							$current,
							"papers",
							lv_papers_14_0,
							"fr.inria.diverse.models2016.dsl.Program.Paper");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_15=';'
				{
					newLeafNode(otherlv_15, grammarAccess.getConferenceAccess().getSemicolonKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConferenceAccess().getPapersPaperParserRuleCall_7_3_1_0());
						}
						lv_papers_16_0=rulePaper
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConferenceRule());
							}
							add(
								$current,
								"papers",
								lv_papers_16_0,
								"fr.inria.diverse.models2016.dsl.Program.Paper");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_17='}'
			{
				newLeafNode(otherlv_17, grammarAccess.getConferenceAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		(
			otherlv_18='events'
			{
				newLeafNode(otherlv_18, grammarAccess.getConferenceAccess().getEventsKeyword_8_0());
			}
			otherlv_19='{'
			{
				newLeafNode(otherlv_19, grammarAccess.getConferenceAccess().getLeftCurlyBracketKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConferenceAccess().getEventsEventParserRuleCall_8_2_0());
					}
					lv_events_20_0=ruleEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConferenceRule());
						}
						add(
							$current,
							"events",
							lv_events_20_0,
							"fr.inria.diverse.models2016.dsl.Program.Event");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_21=';'
				{
					newLeafNode(otherlv_21, grammarAccess.getConferenceAccess().getSemicolonKeyword_8_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConferenceAccess().getEventsEventParserRuleCall_8_3_1_0());
						}
						lv_events_22_0=ruleEvent
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConferenceRule());
							}
							add(
								$current,
								"events",
								lv_events_22_0,
								"fr.inria.diverse.models2016.dsl.Program.Event");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_23='}'
			{
				newLeafNode(otherlv_23, grammarAccess.getConferenceAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
		(
			otherlv_24='program'
			{
				newLeafNode(otherlv_24, grammarAccess.getConferenceAccess().getProgramKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConferenceAccess().getProgramProgramParserRuleCall_9_1_0());
					}
					lv_program_25_0=ruleProgram
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConferenceRule());
						}
						set(
							$current,
							"program",
							lv_program_25_0,
							"fr.inria.diverse.models2016.dsl.Program.Program");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleResource
entryRuleResource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResourceRule()); }
	iv_ruleResource=ruleResource
	{ $current=$iv_ruleResource.current; }
	EOF;

// Rule Resource
ruleResource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getResourceAccess().getRoomParserRuleCall());
	}
	this_Room_0=ruleRoom
	{
		$current = $this_Room_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	iv_ruleEvent=ruleEvent
	{ $current=$iv_ruleEvent.current; }
	EOF;

// Rule Event
ruleEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEventAccess().getTalkSessionParserRuleCall_0());
		}
		this_TalkSession_0=ruleTalkSession
		{
			$current = $this_TalkSession_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getPanelParserRuleCall_1());
		}
		this_Panel_1=rulePanel
		{
			$current = $this_Panel_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getWorkshopParserRuleCall_2());
		}
		this_Workshop_2=ruleWorkshop
		{
			$current = $this_Workshop_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getTutorialParserRuleCall_3());
		}
		this_Tutorial_3=ruleTutorial
		{
			$current = $this_Tutorial_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getDoctoralSymposiumParserRuleCall_4());
		}
		this_DoctoralSymposium_4=ruleDoctoralSymposium
		{
			$current = $this_DoctoralSymposium_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getEducatorSymposiumParserRuleCall_5());
		}
		this_EducatorSymposium_5=ruleEducatorSymposium
		{
			$current = $this_EducatorSymposium_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getReceptionParserRuleCall_6());
		}
		this_Reception_6=ruleReception
		{
			$current = $this_Reception_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getClinicParserRuleCall_7());
		}
		this_Clinic_7=ruleClinic
		{
			$current = $this_Clinic_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getLunchParserRuleCall_8());
		}
		this_Lunch_8=ruleLunch
		{
			$current = $this_Lunch_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getCoffeeBreakParserRuleCall_9());
		}
		this_CoffeeBreak_9=ruleCoffeeBreak
		{
			$current = $this_CoffeeBreak_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getMeetingParserRuleCall_10());
		}
		this_Meeting_10=ruleMeeting
		{
			$current = $this_Meeting_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getSRCParserRuleCall_11());
		}
		this_SRC_11=ruleSRC
		{
			$current = $this_SRC_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getPosterParserRuleCall_12());
		}
		this_Poster_12=rulePoster
		{
			$current = $this_Poster_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getKeynoteParserRuleCall_13());
		}
		this_Keynote_13=ruleKeynote
		{
			$current = $this_Keynote_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getSponsorKeynoteParserRuleCall_14());
		}
		this_SponsorKeynote_14=ruleSponsorKeynote
		{
			$current = $this_SponsorKeynote_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getOpeningParserRuleCall_15());
		}
		this_Opening_15=ruleOpening
		{
			$current = $this_Opening_15.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall());
	}
;

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getProgramAccess().getProgramAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getProgramAccess().getDaysDayParserRuleCall_2_0_0());
					}
					lv_days_2_0=ruleDay
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProgramRule());
						}
						add(
							$current,
							"days",
							lv_days_2_0,
							"fr.inria.diverse.models2016.dsl.Program.Day");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getProgramAccess().getDaysDayParserRuleCall_2_1_0());
					}
					lv_days_3_0=ruleDay
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProgramRule());
						}
						add(
							$current,
							"days",
							lv_days_3_0,
							"fr.inria.diverse.models2016.dsl.Program.Day");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleRoom
entryRuleRoom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoomRule()); }
	iv_ruleRoom=ruleRoom
	{ $current=$iv_ruleRoom.current; }
	EOF;

// Rule Room
ruleRoom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRoomAccess().getRoomAction_0(),
					$current);
			}
		)
		otherlv_1='room'
		{
			newLeafNode(otherlv_1, grammarAccess.getRoomAccess().getRoomKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRoomAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoomRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='capacity'
			{
				newLeafNode(otherlv_3, grammarAccess.getRoomAccess().getCapacityKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRoomAccess().getCapacityEIntegerObjectParserRuleCall_3_1_0());
					}
					lv_capacity_4_0=ruleEIntegerObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRoomRule());
						}
						set(
							$current,
							"capacity",
							lv_capacity_4_0,
							"fr.inria.diverse.models2016.dsl.Program.EIntegerObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleEIntegerObject
entryRuleEIntegerObject returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntegerObjectRule()); }
	iv_ruleEIntegerObject=ruleEIntegerObject
	{ $current=$iv_ruleEIntegerObject.current.getText(); }
	EOF;

// Rule EIntegerObject
ruleEIntegerObject returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getEIntegerObjectAccess().getINTTerminalRuleCall());
	}
;

// Entry rule entryRuleDay
entryRuleDay returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDayRule()); }
	iv_ruleDay=ruleDay
	{ $current=$iv_ruleDay.current; }
	EOF;

// Rule Day
ruleDay returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDayAccess().getWeekdayWeekDayEnumRuleCall_0_0());
				}
				lv_weekday_0_0=ruleWeekDay
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDayRule());
					}
					set(
						$current,
						"weekday",
						lv_weekday_0_0,
						"fr.inria.diverse.models2016.dsl.Program.WeekDay");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='date'
			{
				newLeafNode(otherlv_1, grammarAccess.getDayAccess().getDateKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDayAccess().getDateDayDataTypeParserRuleCall_1_1_0());
					}
					lv_date_2_0=ruleDayDataType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDayRule());
						}
						set(
							$current,
							"date",
							lv_date_2_0,
							"fr.inria.diverse.models2016.dsl.Program.DayDataType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDayAccess().getSessionsSessionParserRuleCall_2_0_0());
					}
					lv_sessions_3_0=ruleSession
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDayRule());
						}
						add(
							$current,
							"sessions",
							lv_sessions_3_0,
							"fr.inria.diverse.models2016.dsl.Program.Session");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDayAccess().getSessionsSessionParserRuleCall_2_1_0());
					}
					lv_sessions_4_0=ruleSession
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDayRule());
						}
						add(
							$current,
							"sessions",
							lv_sessions_4_0,
							"fr.inria.diverse.models2016.dsl.Program.Session");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleDayDataType
entryRuleDayDataType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDayDataTypeRule()); }
	iv_ruleDayDataType=ruleDayDataType
	{ $current=$iv_ruleDayDataType.current.getText(); }
	EOF;

// Rule DayDataType
ruleDayDataType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getDayDataTypeAccess().getINTTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDayDataTypeAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getDayDataTypeAccess().getINTTerminalRuleCall_2());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDayDataTypeAccess().getFullStopKeyword_3());
		}
		this_INT_4=RULE_INT
		{
			$current.merge(this_INT_4);
		}
		{
			newLeafNode(this_INT_4, grammarAccess.getDayDataTypeAccess().getINTTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleHourDataType
entryRuleHourDataType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getHourDataTypeRule()); }
	iv_ruleHourDataType=ruleHourDataType
	{ $current=$iv_ruleHourDataType.current.getText(); }
	EOF;

// Rule HourDataType
ruleHourDataType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getHourDataTypeAccess().getINTTerminalRuleCall_0());
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getHourDataTypeAccess().getColonKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getHourDataTypeAccess().getINTTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleSession
entryRuleSession returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSessionRule()); }
	iv_ruleSession=ruleSession
	{ $current=$iv_ruleSession.current; }
	EOF;

// Rule Session
ruleSession returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSessionAccess().getSessionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSessionAccess().getStartingTimeHourDataTypeParserRuleCall_1_0());
				}
				lv_startingTime_1_0=ruleHourDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSessionRule());
					}
					set(
						$current,
						"startingTime",
						lv_startingTime_1_0,
						"fr.inria.diverse.models2016.dsl.Program.HourDataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='-'
		{
			newLeafNode(otherlv_2, grammarAccess.getSessionAccess().getHyphenMinusKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSessionAccess().getEndingTimeHourDataTypeParserRuleCall_3_0());
				}
				lv_endingTime_3_0=ruleHourDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSessionRule());
					}
					set(
						$current,
						"endingTime",
						lv_endingTime_3_0,
						"fr.inria.diverse.models2016.dsl.Program.HourDataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='in'
		{
			newLeafNode(otherlv_4, grammarAccess.getSessionAccess().getInKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSessionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSessionAccess().getRoomRoomCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getSessionAccess().getColonKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSessionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSessionAccess().getEventsEventCrossReference_7_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getSessionAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSessionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSessionAccess().getEventsEventCrossReference_8_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTalkSession
entryRuleTalkSession returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTalkSessionRule()); }
	iv_ruleTalkSession=ruleTalkSession
	{ $current=$iv_ruleTalkSession.current; }
	EOF;

// Rule TalkSession
ruleTalkSession returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='TalkSession'
		{
			newLeafNode(otherlv_0, grammarAccess.getTalkSessionAccess().getTalkSessionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTalkSessionAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTalkSessionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='chair'
			{
				newLeafNode(otherlv_2, grammarAccess.getTalkSessionAccess().getChairKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTalkSessionAccess().getChairPersonParserRuleCall_2_1_0());
					}
					lv_chair_3_0=rulePerson
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTalkSessionRule());
						}
						set(
							$current,
							"chair",
							lv_chair_3_0,
							"fr.inria.diverse.models2016.dsl.Program.Person");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='abstract'
			{
				newLeafNode(otherlv_4, grammarAccess.getTalkSessionAccess().getAbstractKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTalkSessionAccess().getAbstractEStringParserRuleCall_3_1_0());
					}
					lv_abstract_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTalkSessionRule());
						}
						set(
							$current,
							"abstract",
							lv_abstract_5_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='papers'
			{
				newLeafNode(otherlv_6, grammarAccess.getTalkSessionAccess().getPapersKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTalkSessionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getTalkSessionAccess().getPapersPaperCrossReference_4_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getTalkSessionAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTalkSessionRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getTalkSessionAccess().getPapersPaperCrossReference_4_2_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRulePanel
entryRulePanel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPanelRule()); }
	iv_rulePanel=rulePanel
	{ $current=$iv_rulePanel.current; }
	EOF;

// Rule Panel
rulePanel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Panel'
		{
			newLeafNode(otherlv_0, grammarAccess.getPanelAccess().getPanelKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPanelAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPanelRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='abstract'
			{
				newLeafNode(otherlv_2, grammarAccess.getPanelAccess().getAbstractKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPanelAccess().getAbstractEStringParserRuleCall_2_1_0());
					}
					lv_abstract_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPanelRule());
						}
						set(
							$current,
							"abstract",
							lv_abstract_3_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='panelists'
			{
				newLeafNode(otherlv_4, grammarAccess.getPanelAccess().getPanelistsKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPanelAccess().getPanelistsPersonParserRuleCall_3_1_0());
					}
					lv_panelists_5_0=rulePerson
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPanelRule());
						}
						add(
							$current,
							"panelists",
							lv_panelists_5_0,
							"fr.inria.diverse.models2016.dsl.Program.Person");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getPanelAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPanelAccess().getPanelistsPersonParserRuleCall_3_2_1_0());
						}
						lv_panelists_7_0=rulePerson
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPanelRule());
							}
							add(
								$current,
								"panelists",
								lv_panelists_7_0,
								"fr.inria.diverse.models2016.dsl.Program.Person");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_8='moderators'
			{
				newLeafNode(otherlv_8, grammarAccess.getPanelAccess().getModeratorsKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPanelAccess().getModeratorsPersonParserRuleCall_4_1_0());
					}
					lv_moderators_9_0=rulePerson
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPanelRule());
						}
						add(
							$current,
							"moderators",
							lv_moderators_9_0,
							"fr.inria.diverse.models2016.dsl.Program.Person");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getPanelAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPanelAccess().getModeratorsPersonParserRuleCall_4_2_1_0());
						}
						lv_moderators_11_0=rulePerson
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPanelRule());
							}
							add(
								$current,
								"moderators",
								lv_moderators_11_0,
								"fr.inria.diverse.models2016.dsl.Program.Person");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleSRC
entryRuleSRC returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSRCRule()); }
	iv_ruleSRC=ruleSRC
	{ $current=$iv_ruleSRC.current; }
	EOF;

// Rule SRC
ruleSRC returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SRC'
		{
			newLeafNode(otherlv_0, grammarAccess.getSRCAccess().getSRCKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSRCAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSRCRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='abstract'
			{
				newLeafNode(otherlv_2, grammarAccess.getSRCAccess().getAbstractKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSRCAccess().getAbstractEStringParserRuleCall_2_1_0());
					}
					lv_abstract_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSRCRule());
						}
						set(
							$current,
							"abstract",
							lv_abstract_3_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulePoster
entryRulePoster returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPosterRule()); }
	iv_rulePoster=rulePoster
	{ $current=$iv_rulePoster.current; }
	EOF;

// Rule Poster
rulePoster returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Poster'
		{
			newLeafNode(otherlv_0, grammarAccess.getPosterAccess().getPosterKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPosterAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPosterRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='abstract'
			{
				newLeafNode(otherlv_2, grammarAccess.getPosterAccess().getAbstractKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPosterAccess().getAbstractEStringParserRuleCall_2_1_0());
					}
					lv_abstract_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPosterRule());
						}
						set(
							$current,
							"abstract",
							lv_abstract_3_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleKeynote
entryRuleKeynote returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeynoteRule()); }
	iv_ruleKeynote=ruleKeynote
	{ $current=$iv_ruleKeynote.current; }
	EOF;

// Rule Keynote
ruleKeynote returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Keynote'
		{
			newLeafNode(otherlv_0, grammarAccess.getKeynoteAccess().getKeynoteKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKeynoteAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeynoteRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='abstract'
			{
				newLeafNode(otherlv_2, grammarAccess.getKeynoteAccess().getAbstractKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getKeynoteAccess().getAbstractEStringParserRuleCall_2_1_0());
					}
					lv_abstract_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeynoteRule());
						}
						set(
							$current,
							"abstract",
							lv_abstract_3_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='speaker'
			{
				newLeafNode(otherlv_4, grammarAccess.getKeynoteAccess().getSpeakerKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getKeynoteAccess().getSpeakerPersonParserRuleCall_3_1_0());
					}
					lv_speaker_5_0=rulePerson
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeynoteRule());
						}
						set(
							$current,
							"speaker",
							lv_speaker_5_0,
							"fr.inria.diverse.models2016.dsl.Program.Person");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSponsorKeynote
entryRuleSponsorKeynote returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSponsorKeynoteRule()); }
	iv_ruleSponsorKeynote=ruleSponsorKeynote
	{ $current=$iv_ruleSponsorKeynote.current; }
	EOF;

// Rule SponsorKeynote
ruleSponsorKeynote returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SponsorKeynote'
		{
			newLeafNode(otherlv_0, grammarAccess.getSponsorKeynoteAccess().getSponsorKeynoteKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSponsorKeynoteAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSponsorKeynoteRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='abstract'
			{
				newLeafNode(otherlv_2, grammarAccess.getSponsorKeynoteAccess().getAbstractKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSponsorKeynoteAccess().getAbstractEStringParserRuleCall_2_1_0());
					}
					lv_abstract_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSponsorKeynoteRule());
						}
						set(
							$current,
							"abstract",
							lv_abstract_3_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='speaker'
			{
				newLeafNode(otherlv_4, grammarAccess.getSponsorKeynoteAccess().getSpeakerKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSponsorKeynoteAccess().getSpeakerPersonParserRuleCall_3_1_0());
					}
					lv_speaker_5_0=rulePerson
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSponsorKeynoteRule());
						}
						set(
							$current,
							"speaker",
							lv_speaker_5_0,
							"fr.inria.diverse.models2016.dsl.Program.Person");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleWorkshop
entryRuleWorkshop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWorkshopRule()); }
	iv_ruleWorkshop=ruleWorkshop
	{ $current=$iv_ruleWorkshop.current; }
	EOF;

// Rule Workshop
ruleWorkshop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Workshop'
		{
			newLeafNode(otherlv_0, grammarAccess.getWorkshopAccess().getWorkshopKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWorkshopAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWorkshopRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='abstract'
			{
				newLeafNode(otherlv_2, grammarAccess.getWorkshopAccess().getAbstractKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWorkshopAccess().getAbstractEStringParserRuleCall_2_1_0());
					}
					lv_abstract_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWorkshopRule());
						}
						set(
							$current,
							"abstract",
							lv_abstract_3_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='url'
			{
				newLeafNode(otherlv_4, grammarAccess.getWorkshopAccess().getUrlKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWorkshopAccess().getUrlEStringParserRuleCall_3_1_0());
					}
					lv_url_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWorkshopRule());
						}
						set(
							$current,
							"url",
							lv_url_5_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='name'
			{
				newLeafNode(otherlv_6, grammarAccess.getWorkshopAccess().getNameKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWorkshopAccess().getFullNameEStringParserRuleCall_4_1_0());
					}
					lv_fullName_7_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWorkshopRule());
						}
						set(
							$current,
							"fullName",
							lv_fullName_7_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='organizers'
			{
				newLeafNode(otherlv_8, grammarAccess.getWorkshopAccess().getOrganizersKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWorkshopAccess().getOrganizersPersonParserRuleCall_5_1_0());
					}
					lv_organizers_9_0=rulePerson
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWorkshopRule());
						}
						add(
							$current,
							"organizers",
							lv_organizers_9_0,
							"fr.inria.diverse.models2016.dsl.Program.Person");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getWorkshopAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getWorkshopAccess().getOrganizersPersonParserRuleCall_5_2_1_0());
						}
						lv_organizers_11_0=rulePerson
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getWorkshopRule());
							}
							add(
								$current,
								"organizers",
								lv_organizers_11_0,
								"fr.inria.diverse.models2016.dsl.Program.Person");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleTutorial
entryRuleTutorial returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTutorialRule()); }
	iv_ruleTutorial=ruleTutorial
	{ $current=$iv_ruleTutorial.current; }
	EOF;

// Rule Tutorial
ruleTutorial returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Tutorial'
		{
			newLeafNode(otherlv_0, grammarAccess.getTutorialAccess().getTutorialKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTutorialAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTutorialRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='abstract'
			{
				newLeafNode(otherlv_2, grammarAccess.getTutorialAccess().getAbstractKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTutorialAccess().getAbstractEStringParserRuleCall_2_1_0());
					}
					lv_abstract_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTutorialRule());
						}
						set(
							$current,
							"abstract",
							lv_abstract_3_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='organizers'
			{
				newLeafNode(otherlv_4, grammarAccess.getTutorialAccess().getOrganizersKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTutorialAccess().getOrganizersPersonParserRuleCall_3_1_0());
					}
					lv_organizers_5_0=rulePerson
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTutorialRule());
						}
						add(
							$current,
							"organizers",
							lv_organizers_5_0,
							"fr.inria.diverse.models2016.dsl.Program.Person");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getTutorialAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTutorialAccess().getOrganizersPersonParserRuleCall_3_2_1_0());
						}
						lv_organizers_7_0=rulePerson
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTutorialRule());
							}
							add(
								$current,
								"organizers",
								lv_organizers_7_0,
								"fr.inria.diverse.models2016.dsl.Program.Person");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleDoctoralSymposium
entryRuleDoctoralSymposium returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoctoralSymposiumRule()); }
	iv_ruleDoctoralSymposium=ruleDoctoralSymposium
	{ $current=$iv_ruleDoctoralSymposium.current; }
	EOF;

// Rule DoctoralSymposium
ruleDoctoralSymposium returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DoctoralSymposium'
		{
			newLeafNode(otherlv_0, grammarAccess.getDoctoralSymposiumAccess().getDoctoralSymposiumKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDoctoralSymposiumAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoctoralSymposiumRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='abstract'
			{
				newLeafNode(otherlv_2, grammarAccess.getDoctoralSymposiumAccess().getAbstractKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDoctoralSymposiumAccess().getAbstractEStringParserRuleCall_2_1_0());
					}
					lv_abstract_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDoctoralSymposiumRule());
						}
						set(
							$current,
							"abstract",
							lv_abstract_3_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='organizers'
			{
				newLeafNode(otherlv_4, grammarAccess.getDoctoralSymposiumAccess().getOrganizersKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDoctoralSymposiumAccess().getOrganizersPersonParserRuleCall_3_1_0());
					}
					lv_organizers_5_0=rulePerson
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDoctoralSymposiumRule());
						}
						add(
							$current,
							"organizers",
							lv_organizers_5_0,
							"fr.inria.diverse.models2016.dsl.Program.Person");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getDoctoralSymposiumAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDoctoralSymposiumAccess().getOrganizersPersonParserRuleCall_3_2_1_0());
						}
						lv_organizers_7_0=rulePerson
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDoctoralSymposiumRule());
							}
							add(
								$current,
								"organizers",
								lv_organizers_7_0,
								"fr.inria.diverse.models2016.dsl.Program.Person");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleEducatorSymposium
entryRuleEducatorSymposium returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEducatorSymposiumRule()); }
	iv_ruleEducatorSymposium=ruleEducatorSymposium
	{ $current=$iv_ruleEducatorSymposium.current; }
	EOF;

// Rule EducatorSymposium
ruleEducatorSymposium returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EducatorSymposium'
		{
			newLeafNode(otherlv_0, grammarAccess.getEducatorSymposiumAccess().getEducatorSymposiumKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEducatorSymposiumAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEducatorSymposiumRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='abstract'
			{
				newLeafNode(otherlv_2, grammarAccess.getEducatorSymposiumAccess().getAbstractKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEducatorSymposiumAccess().getAbstractEStringParserRuleCall_2_1_0());
					}
					lv_abstract_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEducatorSymposiumRule());
						}
						set(
							$current,
							"abstract",
							lv_abstract_3_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='organizers'
			{
				newLeafNode(otherlv_4, grammarAccess.getEducatorSymposiumAccess().getOrganizersKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEducatorSymposiumAccess().getOrganizersPersonParserRuleCall_3_1_0());
					}
					lv_organizers_5_0=rulePerson
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEducatorSymposiumRule());
						}
						add(
							$current,
							"organizers",
							lv_organizers_5_0,
							"fr.inria.diverse.models2016.dsl.Program.Person");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getEducatorSymposiumAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEducatorSymposiumAccess().getOrganizersPersonParserRuleCall_3_2_1_0());
						}
						lv_organizers_7_0=rulePerson
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEducatorSymposiumRule());
							}
							add(
								$current,
								"organizers",
								lv_organizers_7_0,
								"fr.inria.diverse.models2016.dsl.Program.Person");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleReception
entryRuleReception returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReceptionRule()); }
	iv_ruleReception=ruleReception
	{ $current=$iv_ruleReception.current; }
	EOF;

// Rule Reception
ruleReception returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Reception'
		{
			newLeafNode(otherlv_0, grammarAccess.getReceptionAccess().getReceptionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReceptionAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReceptionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='abstract'
			{
				newLeafNode(otherlv_2, grammarAccess.getReceptionAccess().getAbstractKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReceptionAccess().getAbstractEStringParserRuleCall_2_1_0());
					}
					lv_abstract_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReceptionRule());
						}
						set(
							$current,
							"abstract",
							lv_abstract_3_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleClinic
entryRuleClinic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClinicRule()); }
	iv_ruleClinic=ruleClinic
	{ $current=$iv_ruleClinic.current; }
	EOF;

// Rule Clinic
ruleClinic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Clinic'
		{
			newLeafNode(otherlv_0, grammarAccess.getClinicAccess().getClinicKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClinicAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClinicRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='abstract'
			{
				newLeafNode(otherlv_2, grammarAccess.getClinicAccess().getAbstractKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClinicAccess().getAbstractEStringParserRuleCall_2_1_0());
					}
					lv_abstract_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClinicRule());
						}
						set(
							$current,
							"abstract",
							lv_abstract_3_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleLunch
entryRuleLunch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLunchRule()); }
	iv_ruleLunch=ruleLunch
	{ $current=$iv_ruleLunch.current; }
	EOF;

// Rule Lunch
ruleLunch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Lunch'
		{
			newLeafNode(otherlv_0, grammarAccess.getLunchAccess().getLunchKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLunchAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLunchRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='abstract'
			{
				newLeafNode(otherlv_2, grammarAccess.getLunchAccess().getAbstractKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLunchAccess().getAbstractEStringParserRuleCall_2_1_0());
					}
					lv_abstract_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLunchRule());
						}
						set(
							$current,
							"abstract",
							lv_abstract_3_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleCoffeeBreak
entryRuleCoffeeBreak returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCoffeeBreakRule()); }
	iv_ruleCoffeeBreak=ruleCoffeeBreak
	{ $current=$iv_ruleCoffeeBreak.current; }
	EOF;

// Rule CoffeeBreak
ruleCoffeeBreak returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CoffeeBreak'
		{
			newLeafNode(otherlv_0, grammarAccess.getCoffeeBreakAccess().getCoffeeBreakKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCoffeeBreakAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCoffeeBreakRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='abstract'
			{
				newLeafNode(otherlv_2, grammarAccess.getCoffeeBreakAccess().getAbstractKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCoffeeBreakAccess().getAbstractEStringParserRuleCall_2_1_0());
					}
					lv_abstract_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCoffeeBreakRule());
						}
						set(
							$current,
							"abstract",
							lv_abstract_3_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMeeting
entryRuleMeeting returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMeetingRule()); }
	iv_ruleMeeting=ruleMeeting
	{ $current=$iv_ruleMeeting.current; }
	EOF;

// Rule Meeting
ruleMeeting returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Meeting'
		{
			newLeafNode(otherlv_0, grammarAccess.getMeetingAccess().getMeetingKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMeetingAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMeetingRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='abstract'
			{
				newLeafNode(otherlv_2, grammarAccess.getMeetingAccess().getAbstractKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMeetingAccess().getAbstractEStringParserRuleCall_2_1_0());
					}
					lv_abstract_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMeetingRule());
						}
						set(
							$current,
							"abstract",
							lv_abstract_3_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleOpening
entryRuleOpening returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOpeningRule()); }
	iv_ruleOpening=ruleOpening
	{ $current=$iv_ruleOpening.current; }
	EOF;

// Rule Opening
ruleOpening returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Opening'
		{
			newLeafNode(otherlv_0, grammarAccess.getOpeningAccess().getOpeningKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOpeningAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOpeningRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='abstract'
			{
				newLeafNode(otherlv_2, grammarAccess.getOpeningAccess().getAbstractKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOpeningAccess().getAbstractEStringParserRuleCall_2_1_0());
					}
					lv_abstract_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOpeningRule());
						}
						set(
							$current,
							"abstract",
							lv_abstract_3_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulePaper
entryRulePaper returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPaperRule()); }
	iv_rulePaper=rulePaper
	{ $current=$iv_rulePaper.current; }
	EOF;

// Rule Paper
rulePaper returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPaperAccess().getPaperAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPaperAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPaperRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='authors'
		{
			newLeafNode(otherlv_2, grammarAccess.getPaperAccess().getAuthorsKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPaperAccess().getAuthorsPersonParserRuleCall_3_0());
				}
				lv_authors_3_0=rulePerson
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPaperRule());
					}
					add(
						$current,
						"authors",
						lv_authors_3_0,
						"fr.inria.diverse.models2016.dsl.Program.Person");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getPaperAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPaperAccess().getAuthorsPersonParserRuleCall_4_1_0());
					}
					lv_authors_5_0=rulePerson
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPaperRule());
						}
						add(
							$current,
							"authors",
							lv_authors_5_0,
							"fr.inria.diverse.models2016.dsl.Program.Person");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_6='abstract'
			{
				newLeafNode(otherlv_6, grammarAccess.getPaperAccess().getAbstractKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPaperAccess().getAbstractEStringParserRuleCall_5_1_0());
					}
					lv_abstract_7_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPaperRule());
						}
						set(
							$current,
							"abstract",
							lv_abstract_7_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='preprint'
			{
				newLeafNode(otherlv_8, grammarAccess.getPaperAccess().getPreprintKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPaperAccess().getPreprintEStringParserRuleCall_6_1_0());
					}
					lv_preprint_9_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPaperRule());
						}
						set(
							$current,
							"preprint",
							lv_preprint_9_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='kind'
			{
				newLeafNode(otherlv_10, grammarAccess.getPaperAccess().getKindKeyword_7_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPaperRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPaperAccess().getKindKindCrossReference_7_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulePerson
entryRulePerson returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPersonRule()); }
	iv_rulePerson=rulePerson
	{ $current=$iv_rulePerson.current; }
	EOF;

// Rule Person
rulePerson returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPersonAccess().getPersonAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPersonAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPersonRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='email'
			{
				newLeafNode(otherlv_2, grammarAccess.getPersonAccess().getEmailKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPersonAccess().getEmailEStringParserRuleCall_2_1_0());
					}
					lv_email_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPersonRule());
						}
						set(
							$current,
							"email",
							lv_email_3_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='homepage'
			{
				newLeafNode(otherlv_4, grammarAccess.getPersonAccess().getHomepageKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPersonAccess().getHomepageEStringParserRuleCall_3_1_0());
					}
					lv_homepage_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPersonRule());
						}
						set(
							$current,
							"homepage",
							lv_homepage_5_0,
							"fr.inria.diverse.models2016.dsl.Program.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleKind
entryRuleKind returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKindRule()); }
	iv_ruleKind=ruleKind
	{ $current=$iv_ruleKind.current; }
	EOF;

// Rule Kind
ruleKind returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getKindAccess().getKindAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getKindAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKindRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.inria.diverse.models2016.dsl.Program.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Rule WeekDay
ruleWeekDay returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Monday'
			{
				$current = grammarAccess.getWeekDayAccess().getMondayEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getWeekDayAccess().getMondayEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Tuesday'
			{
				$current = grammarAccess.getWeekDayAccess().getTuesdayEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getWeekDayAccess().getTuesdayEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Wednesday'
			{
				$current = grammarAccess.getWeekDayAccess().getWednesdayEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getWeekDayAccess().getWednesdayEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Thursday'
			{
				$current = grammarAccess.getWeekDayAccess().getThursdayEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getWeekDayAccess().getThursdayEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Friday'
			{
				$current = grammarAccess.getWeekDayAccess().getFridayEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getWeekDayAccess().getFridayEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='Saturday'
			{
				$current = grammarAccess.getWeekDayAccess().getSaturdayEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getWeekDayAccess().getSaturdayEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='Sunday'
			{
				$current = grammarAccess.getWeekDayAccess().getSundayEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getWeekDayAccess().getSundayEnumLiteralDeclaration_6());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
