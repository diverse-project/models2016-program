/*
 * generated by Xtext
 */
grammar InternalProgram;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package fr.irisa.models.program.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.irisa.models.program.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import fr.irisa.models.program.services.ProgramGrammarAccess;

}

@parser::members {
 
 	private ProgramGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ProgramGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProgram
entryRuleProgram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)?
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDay
entryRuleDay 
:
{ before(grammarAccess.getDayRule()); }
	 ruleDay
{ after(grammarAccess.getDayRule()); } 
	 EOF 
;

// Rule Day
ruleDay
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDayAccess().getGroup()); }
(rule__Day__Group__0)
{ after(grammarAccess.getDayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSession
entryRuleSession 
:
{ before(grammarAccess.getSessionRule()); }
	 ruleSession
{ after(grammarAccess.getSessionRule()); } 
	 EOF 
;

// Rule Session
ruleSession
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSessionAccess().getGroup()); }
(rule__Session__Group__0)
{ after(grammarAccess.getSessionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTalk
entryRuleTalk 
:
{ before(grammarAccess.getTalkRule()); }
	 ruleTalk
{ after(grammarAccess.getTalkRule()); } 
	 EOF 
;

// Rule Talk
ruleTalk
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTalkAccess().getGroup()); }
(rule__Talk__Group__0)
{ after(grammarAccess.getTalkAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule TalkType
ruleTalkType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkTypeAccess().getAlternatives()); }
(rule__TalkType__Alternatives)
{ after(grammarAccess.getTalkTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Room
ruleRoom
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoomAccess().getAlternatives()); }
(rule__Room__Alternatives)
{ after(grammarAccess.getRoomAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule WeekDay
ruleWeekDay
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeekDayAccess().getAlternatives()); }
(rule__WeekDay__Alternatives)
{ after(grammarAccess.getWeekDayAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__TalkType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkTypeAccess().getWorkshopEnumLiteralDeclaration_0()); }
(	'Workshop' 
)
{ after(grammarAccess.getTalkTypeAccess().getWorkshopEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTalkTypeAccess().getTutorialEnumLiteralDeclaration_1()); }
(	'Tutorial' 
)
{ after(grammarAccess.getTalkTypeAccess().getTutorialEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTalkTypeAccess().getSymposiumEnumLiteralDeclaration_2()); }
(	'Symposium' 
)
{ after(grammarAccess.getTalkTypeAccess().getSymposiumEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getTalkTypeAccess().getClinicEnumLiteralDeclaration_3()); }
(	'Clinic' 
)
{ after(grammarAccess.getTalkTypeAccess().getClinicEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getTalkTypeAccess().getBreakEnumLiteralDeclaration_4()); }
(	'Break' 
)
{ after(grammarAccess.getTalkTypeAccess().getBreakEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getTalkTypeAccess().getLunchEnumLiteralDeclaration_5()); }
(	'Lunch' 
)
{ after(grammarAccess.getTalkTypeAccess().getLunchEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getTalkTypeAccess().getPosterEnumLiteralDeclaration_6()); }
(	'Poster' 
)
{ after(grammarAccess.getTalkTypeAccess().getPosterEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getTalkTypeAccess().getSRCEnumLiteralDeclaration_7()); }
(	'SRC' 
)
{ after(grammarAccess.getTalkTypeAccess().getSRCEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getTalkTypeAccess().getMainEnumLiteralDeclaration_8()); }
(	'Main' 
)
{ after(grammarAccess.getTalkTypeAccess().getMainEnumLiteralDeclaration_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoomAccess().getBouvet1EnumLiteralDeclaration_0()); }
(	'Bouvet 1' 
)
{ after(grammarAccess.getRoomAccess().getBouvet1EnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRoomAccess().getBouvet2EnumLiteralDeclaration_1()); }
(	'Bouvet 2' 
)
{ after(grammarAccess.getRoomAccess().getBouvet2EnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getRoomAccess().getCharcotEnumLiteralDeclaration_2()); }
(	'Charcot' 
)
{ after(grammarAccess.getRoomAccess().getCharcotEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getRoomAccess().getVauban1EnumLiteralDeclaration_3()); }
(	'Vauban 1' 
)
{ after(grammarAccess.getRoomAccess().getVauban1EnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getRoomAccess().getVauban2EnumLiteralDeclaration_4()); }
(	'Vauban 2' 
)
{ after(grammarAccess.getRoomAccess().getVauban2EnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getRoomAccess().getLamannais1EnumLiteralDeclaration_5()); }
(	'Lamannais 1' 
)
{ after(grammarAccess.getRoomAccess().getLamannais1EnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getRoomAccess().getLamennais2EnumLiteralDeclaration_6()); }
(	'Lamennais 2' 
)
{ after(grammarAccess.getRoomAccess().getLamennais2EnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getRoomAccess().getLamennais3EnumLiteralDeclaration_7()); }
(	'Lamennais 3' 
)
{ after(grammarAccess.getRoomAccess().getLamennais3EnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getRoomAccess().getRotondeSurcoufEnumLiteralDeclaration_8()); }
(	'Rotonde Surcouf' 
)
{ after(grammarAccess.getRoomAccess().getRotondeSurcoufEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getRoomAccess().getChateaubriandEnumLiteralDeclaration_9()); }
(	'Chateaubriand' 
)
{ after(grammarAccess.getRoomAccess().getChateaubriandEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getRoomAccess().getLamennais12EnumLiteralDeclaration_10()); }
(	'Lamennais 1+2' 
)
{ after(grammarAccess.getRoomAccess().getLamennais12EnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getRoomAccess().getLamennais45EnumLiteralDeclaration_11()); }
(	'Lamennais 4+5' 
)
{ after(grammarAccess.getRoomAccess().getLamennais45EnumLiteralDeclaration_11()); }
)

    |(
{ before(grammarAccess.getRoomAccess().getGrandLargeEnumLiteralDeclaration_12()); }
(	'Grand Large' 
)
{ after(grammarAccess.getRoomAccess().getGrandLargeEnumLiteralDeclaration_12()); }
)

    |(
{ before(grammarAccess.getRoomAccess().getRotondeJCartierEnumLiteralDeclaration_13()); }
(	'Rotonde J. Cartier' 
)
{ after(grammarAccess.getRoomAccess().getRotondeJCartierEnumLiteralDeclaration_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeekDay__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeekDayAccess().getMondayEnumLiteralDeclaration_0()); }
(	'Monday' 
)
{ after(grammarAccess.getWeekDayAccess().getMondayEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getWeekDayAccess().getTuesdayEnumLiteralDeclaration_1()); }
(	'Tuesday' 
)
{ after(grammarAccess.getWeekDayAccess().getTuesdayEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getWeekDayAccess().getWednesdayEnumLiteralDeclaration_2()); }
(	'Wednesday' 
)
{ after(grammarAccess.getWeekDayAccess().getWednesdayEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getWeekDayAccess().getThursdayEnumLiteralDeclaration_3()); }
(	'Thursday' 
)
{ after(grammarAccess.getWeekDayAccess().getThursdayEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getWeekDayAccess().getFridayEnumLiteralDeclaration_4()); }
(	'Friday' 
)
{ after(grammarAccess.getWeekDayAccess().getFridayEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getWeekDayAccess().getSaturdayEnumLiteralDeclaration_5()); }
(	'Saturday' 
)
{ after(grammarAccess.getWeekDayAccess().getSaturdayEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getWeekDayAccess().getSundayEnumLiteralDeclaration_6()); }
(	'Sunday' 
)
{ after(grammarAccess.getWeekDayAccess().getSundayEnumLiteralDeclaration_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getDaysAssignment_0()); }
(rule__Program__DaysAssignment_0)
{ after(grammarAccess.getProgramAccess().getDaysAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getDaysAssignment_1()); }
(rule__Program__DaysAssignment_1)*
{ after(grammarAccess.getProgramAccess().getDaysAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Day__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Day__Group__0__Impl
	rule__Day__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Day__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDayAccess().getWeekDayAssignment_0()); }
(rule__Day__WeekDayAssignment_0)
{ after(grammarAccess.getDayAccess().getWeekDayAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Day__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Day__Group__1__Impl
	rule__Day__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Day__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDayAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getDayAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Day__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Day__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Day__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDayAccess().getGroup_2()); }
(rule__Day__Group_2__0)?
{ after(grammarAccess.getDayAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Day__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Day__Group_2__0__Impl
	rule__Day__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Day__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDayAccess().getSessionsAssignment_2_0()); }
(rule__Day__SessionsAssignment_2_0)
{ after(grammarAccess.getDayAccess().getSessionsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Day__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Day__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Day__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDayAccess().getSessionsAssignment_2_1()); }
(rule__Day__SessionsAssignment_2_1)*
{ after(grammarAccess.getDayAccess().getSessionsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Session__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Session__Group__0__Impl
	rule__Session__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Session__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSessionAccess().getSessionKeyword_0()); }

	'Session' 

{ after(grammarAccess.getSessionAccess().getSessionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Session__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Session__Group__1__Impl
	rule__Session__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Session__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSessionAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getSessionAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Session__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Session__Group__2__Impl
	rule__Session__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Session__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSessionAccess().getNameAssignment_2()); }
(rule__Session__NameAssignment_2)
{ after(grammarAccess.getSessionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Session__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Session__Group__3__Impl
	rule__Session__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Session__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSessionAccess().getStartKeyword_3()); }

	'start' 

{ after(grammarAccess.getSessionAccess().getStartKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Session__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Session__Group__4__Impl
	rule__Session__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Session__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSessionAccess().getStartAssignment_4()); }
(rule__Session__StartAssignment_4)
{ after(grammarAccess.getSessionAccess().getStartAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Session__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Session__Group__5__Impl
	rule__Session__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Session__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSessionAccess().getEndKeyword_5()); }

	'end' 

{ after(grammarAccess.getSessionAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Session__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Session__Group__6__Impl
	rule__Session__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Session__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSessionAccess().getEndAssignment_6()); }
(rule__Session__EndAssignment_6)
{ after(grammarAccess.getSessionAccess().getEndAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Session__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Session__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Session__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSessionAccess().getGroup_7()); }
(rule__Session__Group_7__0)?
{ after(grammarAccess.getSessionAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Session__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Session__Group_7__0__Impl
	rule__Session__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Session__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSessionAccess().getTalksAssignment_7_0()); }
(rule__Session__TalksAssignment_7_0)
{ after(grammarAccess.getSessionAccess().getTalksAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Session__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Session__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Session__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSessionAccess().getTalksAssignment_7_1()); }
(rule__Session__TalksAssignment_7_1)*
{ after(grammarAccess.getSessionAccess().getTalksAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Talk__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Talk__Group__0__Impl
	rule__Talk__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getTypeAssignment_0()); }
(rule__Talk__TypeAssignment_0)
{ after(grammarAccess.getTalkAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Talk__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Talk__Group__1__Impl
	rule__Talk__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getTalkAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Talk__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Talk__Group__2__Impl
	rule__Talk__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getGroup_2()); }
(rule__Talk__Group_2__0)?
{ after(grammarAccess.getTalkAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Talk__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Talk__Group__3__Impl
	rule__Talk__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getRoomAssignment_3()); }
(rule__Talk__RoomAssignment_3)
{ after(grammarAccess.getTalkAccess().getRoomAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Talk__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Talk__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getGroup_4()); }
(rule__Talk__Group_4__0)?
{ after(grammarAccess.getTalkAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Talk__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Talk__Group_2__0__Impl
	rule__Talk__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getTilteAssignment_2_0()); }
(rule__Talk__TilteAssignment_2_0)
{ after(grammarAccess.getTalkAccess().getTilteAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Talk__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Talk__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getCommaKeyword_2_1()); }

	',' 

{ after(grammarAccess.getTalkAccess().getCommaKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Talk__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Talk__Group_4__0__Impl
	rule__Talk__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getLeftParenthesisKeyword_4_0()); }

	'(' 

{ after(grammarAccess.getTalkAccess().getLeftParenthesisKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Talk__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Talk__Group_4__1__Impl
	rule__Talk__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getGroup_4_1()); }
(rule__Talk__Group_4_1__0)?
{ after(grammarAccess.getTalkAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Talk__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Talk__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getRightParenthesisKeyword_4_2()); }

	')' 

{ after(grammarAccess.getTalkAccess().getRightParenthesisKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Talk__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Talk__Group_4_1__0__Impl
	rule__Talk__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getSpeakersAssignment_4_1_0()); }
(rule__Talk__SpeakersAssignment_4_1_0)
{ after(grammarAccess.getTalkAccess().getSpeakersAssignment_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Talk__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Talk__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getGroup_4_1_1()); }
(rule__Talk__Group_4_1_1__0)*
{ after(grammarAccess.getTalkAccess().getGroup_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Talk__Group_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Talk__Group_4_1_1__0__Impl
	rule__Talk__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__Group_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getCommaKeyword_4_1_1_0()); }

	',' 

{ after(grammarAccess.getTalkAccess().getCommaKeyword_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Talk__Group_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Talk__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__Group_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getSpeakersAssignment_4_1_1_1()); }
(rule__Talk__SpeakersAssignment_4_1_1_1)
{ after(grammarAccess.getTalkAccess().getSpeakersAssignment_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Program__DaysAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getDaysDayParserRuleCall_0_0()); }
	ruleDay{ after(grammarAccess.getProgramAccess().getDaysDayParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__DaysAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getDaysDayParserRuleCall_1_0()); }
	ruleDay{ after(grammarAccess.getProgramAccess().getDaysDayParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Day__WeekDayAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDayAccess().getWeekDayWeekDayEnumRuleCall_0_0()); }
	ruleWeekDay{ after(grammarAccess.getDayAccess().getWeekDayWeekDayEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Day__SessionsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDayAccess().getSessionsSessionParserRuleCall_2_0_0()); }
	ruleSession{ after(grammarAccess.getDayAccess().getSessionsSessionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Day__SessionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDayAccess().getSessionsSessionParserRuleCall_2_1_0()); }
	ruleSession{ after(grammarAccess.getDayAccess().getSessionsSessionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Session__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSessionAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getSessionAccess().getNameSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Session__StartAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSessionAccess().getStartSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getSessionAccess().getStartSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Session__EndAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSessionAccess().getEndSTRINGTerminalRuleCall_6_0()); }
	RULE_STRING{ after(grammarAccess.getSessionAccess().getEndSTRINGTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Session__TalksAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSessionAccess().getTalksTalkParserRuleCall_7_0_0()); }
	ruleTalk{ after(grammarAccess.getSessionAccess().getTalksTalkParserRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Session__TalksAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSessionAccess().getTalksTalkParserRuleCall_7_1_0()); }
	ruleTalk{ after(grammarAccess.getSessionAccess().getTalksTalkParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getTypeTalkTypeEnumRuleCall_0_0()); }
	ruleTalkType{ after(grammarAccess.getTalkAccess().getTypeTalkTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__TilteAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getTilteSTRINGTerminalRuleCall_2_0_0()); }
	RULE_STRING{ after(grammarAccess.getTalkAccess().getTilteSTRINGTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__RoomAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getRoomRoomEnumRuleCall_3_0()); }
	ruleRoom{ after(grammarAccess.getTalkAccess().getRoomRoomEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__SpeakersAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getSpeakersSTRINGTerminalRuleCall_4_1_0_0()); }
	RULE_STRING{ after(grammarAccess.getTalkAccess().getSpeakersSTRINGTerminalRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Talk__SpeakersAssignment_4_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTalkAccess().getSpeakersSTRINGTerminalRuleCall_4_1_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getTalkAccess().getSpeakersSTRINGTerminalRuleCall_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


